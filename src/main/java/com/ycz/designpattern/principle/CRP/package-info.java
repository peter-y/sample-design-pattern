/**
 * <b>合成复用原则</b> 尽量使用对象组合，而不是继承来达到复用的目的<br>
 * 组合已有对象，做为新对象的一部分，然后形成一个新的对象，减少继承的使用<br>
 * 继承能够被使用于多态和功能的扩展，但不适合代码的复用，因为基类行为的变化会影响子类的行为<br>
 * 通过继承的代码复用称为白箱，基类处理可见。通过合成复用对代码复用，称为黑箱<br>
 * <b>一般而言，如果两个类之间是“Has-A”的关系应使用组合或聚合，如果是“Is-A”关系可使用继
 * 承。"Is-A"是严格的分类学意义上的定义，意思是一个类是另一个类的"一种"；而"Has-A"则不
 * 同，它表示某一个角色具有某一项责任</b>
 */
package com.ycz.designpattern.principle.CRP;